rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Listings collection group rules
    match /{path=**}/listings/{listingId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(request.resource.data.userId);
    }

    // Listing interests rules
    match /listingInterests/{listingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        // Only allow updating if not changing other users' data
        (!request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['listingId']) || resource.data.listingId == request.resource.data.listingId);
      allow delete: if false;
    }

    // User profiles
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Starred listings
    match /starredListings/{userId}/listings/{listingId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
  }
} 