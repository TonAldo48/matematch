rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Profiles collection
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Starred listings collection
    match /starredListings/{userId}/listings/{listingId} {
      allow read, write: if isOwner(userId);
    }

    // Listing interests collection - More permissive rules
    match /listingInterests/{listingId} {
      // Anyone authenticated can read and write to listing interests
      allow read, write: if isAuthenticated();
      
      // Allow delete if:
      // 1. User is authenticated
      // 2. The document exists and has no interested users left
      allow delete: if isAuthenticated() 
        && (resource == null || 
            (resource.data.interestedUsers is list && 
             resource.data.interestedUsers.size() == 0));
    }
  }
} 