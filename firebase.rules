rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // User profiles
    match /profiles/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }

    // Starred listings
    match /starredListings/{userId}/listings/{listingId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }

    // Listing interests
    match /listingInterests/{listingId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    // Activities
    match /activities/{activityId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && 
        request.resource.data.data.userId == request.auth.uid &&
        request.resource.data.type in ['new_listing', 'expressed_interest', 'new_roommate', 'starred_listing'];
      allow delete: if isSignedIn() && 
        resource.data.data.userId == request.auth.uid;
      
      // Comments on activities
      match /comments/{commentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
      }
      
      // Likes on activities
      match /likes/{userId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && userId == request.auth.uid;
      }
    }

    // User interactions (likes, shares, saves)
    match /userInteractions/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      match /likes/{activityId} {
        allow read: if isSignedIn();
        allow write: if isOwner(userId);
      }
      
      match /saves/{activityId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }
  }
} 